name: Update README Widget

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch API data and create widget
        env:
          NOMAD_URL: "https://nomads.com/@danielreilly.json?key=b9ec566fe67015f63c7d6225ff9e5a4d"
        run: |
          set -euo pipefail
          IFS=$'\n\t'

          json=$(curl -s "$NOMAD_URL")

          if [ -z "$json" ] || ! echo "$json" | jq empty > /dev/null 2>&1; then
            echo "Invalid or empty response from NOMAD_URL. Skipping widget update."
            exit 0
          fi

          currentCity=$(echo "$json" | jq -r 'try .location.now.city // "Unknown"')
          currentCountryCode=$(echo "$json" | jq -r 'try .location.now.country_code // ""')

          nextCity=$(echo "$json" | jq -r 'try .location.next.city // "Unknown"')
          nextCountryCode=$(echo "$json" | jq -r 'try .location.next.country_code // ""')
          nextStart=$(echo "$json" | jq -r 'try .location.next.date_start // ""')
          nextEnd=$(echo "$json" | jq -r 'try .location.next.date_end // ""')

          lastCity=$(echo "$json" | jq -r 'try .location.previous.city // "Unknown"')
          lastCountryCode=$(echo "$json" | jq -r 'try .location.previous.country_code // ""')
          lastStart=$(echo "$json" | jq -r 'try .location.previous.date_start // ""')
          lastEnd=$(echo "$json" | jq -r 'try .location.previous.date_end // ""')

          countries=$(echo "$json" | jq -r 'try .stats.countries // 0')
          cities=$(echo "$json" | jq -r 'try .stats.cities // 0')
          distanceKm=$(echo "$json" | jq -r 'try .stats.distance_traveled_km // 0')
          distanceMiles=$(echo "$json" | jq -r 'try .stats.distance_traveled_miles // 0')

          mostCity=$(echo "$json" | jq -r 'try .frequent_visits | to_entries | sort_by(-.value) | .[0] // empty | "\(.key) \(.value)"')
          mostCityName=$(echo "$mostCity" | cut -d' ' -f1 | tr '-' ' ' | sed 's/\b\(\w\)/\u\1/g')
          mostCityTrips=$(echo "$mostCity" | cut -d' ' -f2)
          mostCityName=${mostCityName:-Unknown}
          mostCityTrips=${mostCityTrips:-0}

          longestCity=$(echo "$json" | jq -r 'try .longest_stays | to_entries | sort_by(-.value) | .[0] // empty | "\(.key) \(.value)"')
          longestCityName=$(echo "$longestCity" | cut -d' ' -f1 | tr '-' ' ' | sed 's/\b\(\w\)/\u\1/g')
          longestCityDays=$(echo "$longestCity" | cut -d' ' -f2)
          longestCityName=${longestCityName:-Unknown}
          longestCityDays=${longestCityDays:-0}

          if [[ -n "$nextStart" && -n "$nextEnd" ]]; then
            nextRange=$(date -d "$nextStart" '+%b %-d')–$(date -d "$nextEnd" '+%-d')
          else
            nextRange="TBD"
          fi

          if [[ -n "$lastStart" && -n "$lastEnd" ]]; then
            lastRange=$(date -d "$lastStart" '+%b %-d')–$(date -d "$lastEnd" '+%-d')
          else
            lastRange="Unknown"
          fi

          echo "#### 🌍 Travel Summary" > widget.md
          echo "" >> widget.md
          echo "**📍 Currently in:** $currentCity, $currentCountryCode  " >> widget.md
          echo "**🛫 Next:** $nextCity, $nextCountryCode — *$nextRange*  " >> widget.md
          echo "**🛬 Last:** $lastCity, $lastCountryCode — *$lastRange*" >> widget.md
          echo "" >> widget.md
          echo "---" >> widget.md
          echo "" >> widget.md
          echo "**🧭 Stats**  " >> widget.md
          echo "- **Countries visited:** $countries  " >> widget.md
          echo "- **Cities visited:** $cities  " >> widget.md
          echo "- **Distance traveled:** ${distanceKm} km / ${distanceMiles} mi  " >> widget.md
          echo "- **Most visited city:** $mostCityName ($mostCityTrips trips)  " >> widget.md
          echo "- **Longest stay:** $longestCityName — $longestCityDays days" >> widget.md
          echo "" >> widget.md
          echo "**🗺 Map:** [View Nomads Travel Map](https://url2og.com/?url=https%3A%2F%2Fnomads.com%2F%40danielreilly%3Fmap_only%3Dtrue%26key%3Db9ec566fe67015f63c7d6225ff9e5a4d)" >> widget.md

          awk '/<!-- WIDGET_START -->/ { print; system("cat widget.md"); in_widget=1; next } /<!-- WIDGET_END -->/ { print; in_widget=0; next } !in_widget { print }' README.md > temp.md
          mv temp.md README.md

      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Update dynamic widget"
            git push origin HEAD:${{ github.ref }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
