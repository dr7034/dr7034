name: Update README Widget

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    env:
      NOMAD_URL: "https://nomads.com/@danielreilly.json?key=b9ec566fe67015f63c7d6225ff9e5a4d"

    steps:
      - uses: actions/checkout@v4

      - name: Ensure jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build widget
        run: |
          set -euo pipefail
          IFS=$'\n\t'

          json=$(curl -fsSL "$NOMAD_URL")
          echo "— RAW now —"; echo "$json" | jq -r '.location.now // empty'

          currentCity=$(echo "$json" | jq -r 'try .location.now.city // ""')
          currentCountryCode=$(echo "$json" | jq -r 'try .location.now.country_code // ""')
          nextCity=$(echo "$json" | jq -r 'try .location.next.city // ""')
          nextCountryCode=$(echo "$json" | jq -r 'try .location.next.country_code // ""')
          nextStart=$(echo "$json" | jq -r 'try .location.next.date_start // ""')
          nextEnd=$(echo "$json" | jq -r 'try .location.next.date_end // ""')
          lastCity=$(echo "$json" | jq -r 'try .location.previous.city // ""')
          lastCountryCode=$(echo "$json" | jq -r 'try .location.previous.country_code // ""')
          lastStart=$(echo "$json" | jq -r 'try .location.previous.date_start // ""')
          lastEnd=$(echo "$json" | jq -r 'try .location.previous.date_end // ""')

          echo "DEBUG: now.city='$currentCity' next.city='$nextCity' prev.city='$lastCity'"

          if [[ -z "$currentCity" && -z "$nextCity" && -z "$lastCity" ]]; then
            echo "All location selectors empty; abort."; exit 1
          fi

          countries=$(echo "$json" | jq -r 'try .stats.countries // 0')
          cities=$(echo "$json" | jq -r 'try .stats.cities // 0')
          distanceKm=$(echo "$json" | jq -r 'try .stats.distance_traveled_km // 0')
          distanceMiles=$(echo "$json" | jq -r 'try .stats.distance_traveled_miles // 0')

          mostCity=$(echo "$json" | jq -r 'try .frequent_visits | to_entries | sort_by(-.value) | .[0] // empty | "\(.key) \(.value)"')
          mostCityName=$(echo "$mostCity" | cut -d' ' -f1 | tr '-' ' ' | sed 's/\b\(\w\)/\u\1/g')
          mostCityTrips=$(echo "$mostCity" | cut -d' ' -f2)
          longestCity=$(echo "$json" | jq -r 'try .longest_stays | to_entries | sort_by(-.value) | .[0] // empty | "\(.key) \(.value)"')
          longestCityName=$(echo "$longestCity" | cut -d' ' -f1 | tr '-' ' ' | sed 's/\b\(\w\)/\u\1/g')
          longestCityDays=$(echo "$longestCity" | cut -d' ' -f2)

          if [[ -n "$nextStart" && -n "$nextEnd" ]]; then
            nextRange=$(date -d "$nextStart" '+%b %-d')–$(date -d "$nextEnd" '+%-d')
          else
            nextRange="TBD"
          fi

          if [[ -n "$lastStart" && -n "$lastEnd" ]]; then
            lastRange=$(date -d "$lastStart" '+%b %-d')–$(date -d "$lastEnd" '+%-d')
          else
            lastRange="Unknown"
          fi

          echo "#### 🌍 Travel Summary" > widget.md
          echo "" >> widget.md
          echo "**📍 Currently in:** ${currentCity:-Unknown}, ${currentCountryCode}  " >> widget.md
          echo "**🛫 Next:** ${nextCity:-Unknown}, ${nextCountryCode} — *$nextRange*  " >> widget.md
          echo "**🛬 Last:** ${lastCity:-Unknown}, ${lastCountryCode} — *$lastRange*" >> widget.md
          echo "" >> widget.md
          echo "---" >> widget.md
          echo "" >> widget.md
          echo "**🧭 Stats**  " >> widget.md
          echo "- **Countries visited:** $countries  " >> widget.md
          echo "- **Cities visited:** $cities  " >> widget.md
          echo "- **Distance traveled:** ${distanceKm} km / ${distanceMiles} mi  " >> widget.md
          echo "- **Most visited city:** ${mostCityName:-Unknown} (${mostCityTrips:-0} trips)  " >> widget.md
          echo "- **Longest stay:** ${longestCityName:-Unknown} — ${longestCityDays:-0} days" >> widget.md

          awk '/<!-- WIDGET_START -->/ { print; system("cat widget.md"); in_widget=1; next } /<!-- WIDGET_END -->/ { print; in_widget=0; next } !in_widget { print }' README.md > temp.md
          mv temp.md README.md

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update widget" || exit 0
          git push
